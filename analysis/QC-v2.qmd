---
title: "QC"
author: "Chao Dai"
date: "7/28/22 (modified: `r Sys.Date()`)"
editor_options:
  chunk_output_type: inline
---

```{r}
#| include: false

library(tidyverse)
library(data.table)
library(yaml)

```


## Library Description

```{r}

# config yaml
config = yaml.load_file("../code/config/config.yaml")

# sample sheets
ss = list(rna = fread(paste0("../code/", config$RNA_SAMPLES)),
          atac = fread(paste0("../code/", config$ATAC_SAMPLES))
          )
```


```{r}

ss$rna = ss$rna[, .(
  library = "rna-seq",
  batch = if_else(batch == "A", 1, 2),
  sampleid = sample,
  condition = paste(treatment, time, sep="-")
)] %>% unique

ss$atac = ss$atac[, .(
  library = "atac-seq", 
  batch = 1,
  sampleid = paste("S", str_match(fastq, "ATAC([0-9]{1,2})")[, 2], sep=""),
  condition = paste("wt", time, sep="-")
)] %>% unique

ss = rbindlist(ss)

# bam flagstats
flagstat = dir("../code/results/QC/flagstat", '*txt', recursive = T, full.names = T)
flagstat_meta = str_match(flagstat, "([rnatc]{3,4}-seq).+(batch[1/2]).+(S[0-9]{2})")  %>% as.data.table
flagstat_meta = flagstat_meta[, .(
  library = V2,
  batch = str_extract(V3, "[0-9]{1}") %>% as.numeric,
  sampleid = V4,
  file = flagstat
)] %>% unique


# join
flagstat_meta = ss[flagstat_meta, on = c("library", "batch", "sampleid"), nomatch = NA]

```


```{r}
# library size = primary mapped reads
flagstat_meta[, data := map(file, fread)]

lib_size1 = flagstat_meta[, .(
  description = paste(library, condition, sep = "::"),
  library,
  batch,
  sampleid,
  condition,
  primary_mapped = map_dbl(data, ~ .x$V1[[9]] %>% as.numeric)
)][order(description), .(size = sum(primary_mapped)), by = "description"] 

lib_size2 = flagstat_meta[, .(
  description = paste(library, condition, sep = "::"),
  library,
  batch,
  sampleid,
  condition,
  primary_mapped = map_dbl(data, ~ .x$V1[[9]] %>% as.numeric)
)][, .(size = sum(primary_mapped)), by = "library"]

lib_size3 = flagstat_meta[, .(
  library,
  batch,
  sampleid,
  condition,
  primary_mapped = map_dbl(data, ~ .x$V1[[9]] %>% as.numeric)
)][order(library, condition, sampleid), .(size = sum(primary_mapped)), by = .(library, condition, sampleid)]

```

Overall we generated `r lib_size2$size[1] %>% scales::comma(.)` primarily mapped reads for the ATAC-seq library and `r lib_size2$size[2] %>% scales::comma(.)` primarily mapped reads for the RNA-seq library ( table \@ref(tab:table1).

```{r table1, include=TRUE}
# total library size
lib_size2[, .(library, size = scales::comma(size))] #%>% knitr::kable(., caption = "Total library size")
```


Detailed library size in table \@ref(tab:table2)

```{r table2, include=TRUE}
# library size by condition
lib_size1[, .(description,
              size = scales::comma(size)
                )] 

```


**sample**

```{r}
lib_size3
```


**by sample and batch**

ATAC

```{r}
flagstat_meta[, .(
  library,
  batch,
  sampleid,
  condition,
  primary_mapped = map_dbl(data, ~ .x$V1[[9]] %>% as.integer(.))
)][order(library, condition, sampleid, batch), .(size = sum(primary_mapped)), by = .(library, condition, sampleid, batch)] %>% 
  .[library == "atac-seq"] %>% 
  knitr::kable()
```



RNA

```{r}
flagstat_meta[, .(
  library,
  batch,
  sampleid,
  condition,
  primary_mapped = map_dbl(data, ~ .x$V1[[9]] %>% as.integer(.))
)][order(library, condition, sampleid, batch), .(size = sum(primary_mapped)), by = .(library, condition, sampleid, batch)] %>% 
  .[library == "rna-seq"] %>% 
  knitr::kable()
```


## CRISPR

```{r}
cnts.file = "../code/resources/crispr/counts/wrangled_raw_counts.tsv" # raw file
cnts = fread(cnts.file) %>% .[, .(ID=sgRNA, Gene, S6 = Day14_iN, S7=Day14_Tdpos, S8=Day14_Tdneg)]
```


### numer of guides

```{r}
cnts[, type := if_else(str_detect(Gene, "NonTarget"), "NTC", "Targeting")]
```
```{r}
cnts[, .(N_total_gRNAs = length(unique(ID))), by = type]
```

```{r}
cnts[ type == "Targeting", Gene] %>% unique %>% length
```



```{r}
# group 10 NTC guides into 1 NTC group
NTC = paste("NonTargeting_Human_", sort(rep(1:100, 10)), sep="")
cnts[str_detect(toupper(Gene), "NONTARGET"), Gene := NTC]
```


total library size
```{r}
cnts[, .SD, .SDcols = is.numeric] %>% sum
```

size by library
```{r}
cnts[, .SD, .SDcols = is.numeric] %>% colSums
```


## Hits 
```{r}
hitlist = fread("../code/resources/crispr/Hitlist_20191230.csv")
```

```{r}
dt = cnts[, .(Gene, ID, S6, S7, S8, rs = rowSums(cnts[, .(S6, S7, S8)]))][
  Gene %in% hitlist$gene_name & rs>0
][order(Gene, rs), -c("rs")]

dt = dt[, .(Gene, ID, iN = S6, td_pos = S7, td_neg = S8)]
fwrite(dt, "../data/hitTFs-reads-by-gRNA.tsv", sep = "\t")


dt
```

## Number of ATAC-seq reads in promoters

```{r}
preads.f <- glue::glue("../code/results/reviews/atac/counts/promoter/ATAC{1:12}.txt.summary")
names(preads.f) <- glue::glue("ATAC{1:12}")
preads <- map(preads.f, \(x) fread(x) %>% deframe %>% .[["Assigned"]]) %>% unlist

preads <- enframe(preads)
```

```{r}
preads %>% mutate(sampleid = str_replace(name, "ATAC", "") %>% str_pad(2, pad="0") %>% str_pad(3, pad="S")) %>% 
  left_join(filter(ss, library == "atac-seq"), by = "sampleid") %>% 
  select(library, condition, sampleid, value)
```


## Number of ATAC-seeq raw sequenced reads


```{r}
# ../code/results/ATACseq/fastqc/HG7FNBGX9_n02_ATAC01_11-14-18_fastqc/fastqc_data.txt

fastqdata <- c(
  glue::glue("../code/results/ATACseq/fastqc/HG7FNBGX9_n01_ATAC{str_pad(1:12, 2, pad=\'0\')}_11-14-18_fastqc/fastqc_data.txt"),
  glue::glue("../code/results/ATACseq/fastqc/HG7FNBGX9_n02_ATAC{str_pad(1:12, 2, pad=\'0\')}_11-14-18_fastqc/fastqc_data.txt")
  )

cmds <- glue::glue("awk '$0 ~ /Total Sequences/ {{print $0}}' {fastqdata}")
names(cmds) <- str_extract(cmds, "(n\\d{2}).+(ATAC\\d{2})")

map(cmds, \(x) fread(x) %>% .[, V2]) %>% unlist %>% enframe %>% 
  separate(name, c("read", "sampleid")) %>% 
  mutate(sampleid = str_replace(sampleid, "ATAC", "S")) %>% 
  group_by(sampleid) %>% 
  summarise(readsbysample = sum(value)) %>% 
  inner_join(ss[library == "atac-seq", .(library, sampleid, condition)] %>% unique, by = "sampleid") %>% 
  select(library, condition, sampleid, readsbysample) %>% 
  mutate(readsbysample = scales::number(readsbysample)) %>% 
  arrange(sampleid)

```


## Number of RNA-seq raw sequenced reads

```{r}
# ../code/results/RNAseq/fastqc/HFJM7BGXC_n01_S17_fastqc/fastqc_data.txt
#HFJM7BGXC_n01_S19_fastqc.zip

fastqdata <- c(
  glue::glue("../code/results/RNAseq/fastqc/H2HY7BGXC_n01_S{str_pad(1:22, 2, pad=\'0\')}_fastqc/fastqc_data.txt"),
  glue::glue("../code/results/RNAseq/fastqc/HFJM7BGXC_n01_S{str_pad(1:22, 2, pad=\'0\')}_fastqc/fastqc_data.txt")
  )

batches <- c("H2HY7BGXC" = "1", "HFJM7BGXC" = "2")
cmds <- glue::glue("awk '$0 ~ /Total Sequences/ {{print $0}}' {fastqdata}")
names(cmds) <- str_extract(cmds, "(H2HY7BGXC|HFJM7BGXC).+(S\\d{2})")

map(cmds, \(x) fread(cmd = x) %>% .[, V2]) %>% unlist %>% enframe %>% 
  extract(name, c("batch", "sampleid"), "(H2HY7BGXC|HFJM7BGXC).+(S\\d{2})") %>%
  mutate(batch = map_chr(batch, \(x) batches[x])) %>% 
  group_by(sampleid, batch) %>% 
  summarise(readsbysample = sum(value), .groups = "drop") %>% 
  inner_join(ss[library == "rna-seq", .(library, sampleid, condition, batch=as.character(batch))] %>% unique, by = c("sampleid", "batch")) %>% 
  select(library, condition, sampleid,  batch, readsbysample) %>% 
  #mutate(readsbysample = scales::comma(readsbysample)) %>% 
  arrange(condition,  sampleid, batch) %>% 
  knitr::kable(format = "html")

```










[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NeuronReporters",
    "section": "",
    "text": "Did CRISPR screen analysis using custom RRA method link\nRespond to comments on ATAC QC link"
  },
  {
    "objectID": "index.html#reviewer-1",
    "href": "index.html#reviewer-1",
    "title": "NeuronReporters",
    "section": "Reviewer 1",
    "text": "Reviewer 1\n\nRegarding ENCODE ChIP-seq, see google doc section\n\nEncode investigated: LINK\nZEB1 ChIP-seq analysis LINK"
  },
  {
    "objectID": "index.html#reviewer-2",
    "href": "index.html#reviewer-2",
    "title": "NeuronReporters",
    "section": "Reviewer 2",
    "text": "Reviewer 2\n\nRegarding ATAC-seq agreement comment, see google doc section\n\nSee genome-wide correlation heatmap, LINK\nSee gene body correlation heatmap, LINK\nFurther QC plot to show ATAC-seq fragment size, LINK\n\nRegarding the addition of RRA ranks method for CRISPR screen, see google doc section\n\nWhile results not good, I did try both RRA and MLE tests. LINK\nI recently rerun RRA using NTC sgRNA as null, based on Xinhe’s advice. However results are still not good. LINK\n\nRegarding libary QC, see google doc section\n\nSee Library summary LINK\n\nRegarding RNA-seq heatmap in Fig. 1B, see google doc section\n\nUpdated Heatmaps here and here\n\nRegarding sgRNA statistics, see google doc section\n\nAlso refer to google doc on my attempt of running permutation test. Permutation code here\n\nRegarding adding intergenic regions and rerun network analysis\n\nRerun motif search and interaction scripts on new annotations of TSS+100kb -> TES+1kb. Result to be presented."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "analysis/Presentation_template.html",
    "href": "analysis/Presentation_template.html",
    "title": "NeuronReporters",
    "section": "",
    "text": "Chao Dai  2023-01-06"
  },
  {
    "objectID": "analysis/Presentation_template.html#slide-with-one-figure",
    "href": "analysis/Presentation_template.html#slide-with-one-figure",
    "title": "NeuronReporters",
    "section": "Slide with one figure",
    "text": "Slide with one figure\n\n\n\n\n\n\none point, using text variable abc\nanother point, using numeric variable 15.7079633"
  },
  {
    "objectID": "analysis/Presentation_template.html#slide-with-multiple-columns-and-figures",
    "href": "analysis/Presentation_template.html#slide-with-multiple-columns-and-figures",
    "title": "NeuronReporters",
    "section": "Slide with multiple columns and figures",
    "text": "Slide with multiple columns and figures\n\n\nPlot 1\n\n\n\n\n\n\n\n\nPlot 2\n\n\n\n\n\n\n\n\nkey points 1\nkey points 2"
  },
  {
    "objectID": "analysis/Presentation_template.html#slides-with-equations",
    "href": "analysis/Presentation_template.html#slides-with-equations",
    "title": "NeuronReporters",
    "section": "Slides with equations",
    "text": "Slides with equations\n\n\\[E = MC^2\\] \n\nDescriptions"
  },
  {
    "objectID": "analysis/Presentation_template.html#section",
    "href": "analysis/Presentation_template.html#section",
    "title": "NeuronReporters",
    "section": "",
    "text": "Thank you!"
  },
  {
    "objectID": "analysis/crispr_rra.html",
    "href": "analysis/crispr_rra.html",
    "title": "CRISPR Screen RRA Analysis",
    "section": "",
    "text": "Td- vs. iN at Day14 (S8/S6):\n\nThese cells became non-neurons, the enrichment of guides found from S8 / S6 means that these guides discrupt TFs that may be crucial to neuron development. Because these cells failed to become neurons, enrichment of these guides mean TFs responsible for neuron development are disrupted.\n\nTd- vs. Td+ at Day14 (S8/S7)\n\nS8 are non-neurons and S7 are neurons. The enrichment of guides found in neurons, while depleted in non-neurons, mean that these guides disrupte the function of TFs that are responsible for neuron development.\n\nTd+ vs. iN at Day14 (S7/S6)\n\nThese cells became neurons. The enrichment of guides found from S7 - S6 means that these guides disrupt TFs that may be repressors of neuron development, or that these targetted TFs are reponsible for maintaining stem cell status.\nThe depletion of these guides means that the targeted TFs may be crucial to neuron development (since these cells have become neurons, you wouldn’t find many cells with neuron related TFs being disrupted, thus you observe depletion of gRNAs).\n\n\n\nCode\n#cnts.file = \"../../resources/crispr/counts/RC.csv\"\ncnts.file = \"../code/resources/crispr/counts/wrangled_raw_counts.tsv\" # raw file\n#cnts.rn.file = \"../../resources/crispr/counts/wrangled_ranknorm_counts.tsv\" # rank normalized\n#cnts.l2.file = \"/gpfs/commons/groups/sanjana_lab/cdai/TFscreen/RCmNorRatioLog2.lu.csv\"\n\ncnts = fread(cnts.file) %>% .[, .(ID=sgRNA, Gene, S6 = Day14_iN, S7=Day14_Tdpos, S8=Day14_Tdneg)]\n#cnts.l2 = fread(cnts.l2.file) %>% .[, .(ID, Gene, S6, S7, S8)]\n\n\n# group 10 NTC guides into 1 NTC group\nNTC = paste(\"NonTargeting_Human_\", sort(rep(1:100, 10)), sep=\"\")\ncnts[str_detect(toupper(Gene), \"NONTARGET\"), Gene := NTC]\n\n# remove any guides where S6 or iN is 1 or less\n# remove genes that have less than 5 guides left at iN or S6\ncnts = cnts[S6 > 1]\ncnts = cnts[, .(ID, S6, S7, S8, .N), by = Gene][N>4, -c(\"N\")]\n\nselcols = c(\"S6\", \"S7\", \"S8\")\n# log2 RPM normalize counts\ncnts.norm = cnts[, c(\n    list(ID = ID, Gene = Gene),\n    lapply(.SD, function(x) log2(if_else(x==0, .1, .1*x)*1e6/sum(x)) )\n), .SDcols = selcols]\n\n\n\n\nCode\nmakeDT = function(dt, dt.norm) {\n    # dt: is raw counts,\n    # dt.norm: is the same, but normalized\n    # columns: ID, Gene, denom, num\n    \n    # both denom and num conditions must have at least 2 guides with reads > 0\n    genes1 = dt[denom > 0, .N, by = Gene][N>1, Gene] %>% unique\n    genes2 = dt[num > 0, .N, by = Gene][N>1, Gene] %>% unique\n    genes = intersect(genes1, genes2)\n    \n    dt = dt[Gene %in% genes & denom > 0 & num > 0]\n    dt.norm = dt.norm[Gene %in% genes]\n    \n    dt.out = dt.norm[dt[, .(ID, Gene)], on = c(\"Gene\", \"ID\"), nomatch=NULL]\n    \n    return(dt.out)\n}\n\nweightedSum = function(x) {\n    # x must be a numerical vector of exactly 2 elements\n    # x must be sorted, x[1] <= x[2]\n    return(0.25*x[1] + 0.75*x[2]) # more weights no the second rank\n}\n\nRRA = function(dt, enrichment) {\n    # dt is a dataframe with column ID, Gene, denom, num (which are Log2 RPM normalized reads)\n    dt = dt[, .(ID, Gene, denom, num, l2fc = num - denom)] # compute l2fc\n    if (enrichment) {\n        dt = dt[, .(ID, Gene,l2fc, rk=rank(-l2fc, ties.method = \"max\"))] # look for enriched guides\n    } else {\n        dt = dt[, .(ID, Gene,l2fc, rk=rank(l2fc, ties.method = \"max\"))] # look for depleted guides\n    }\n    dt = dt[order(Gene, rk), .SD[1:2], by = Gene # select top 2 guides for each gene\n            ][, .(rankscore = weightedSum(rk)), by = Gene\n             ][order(rankscore)]\n    return(dt)\n}"
  },
  {
    "objectID": "analysis/crispr_rra.html#compute-enrichment-or-depletion",
    "href": "analysis/crispr_rra.html#compute-enrichment-or-depletion",
    "title": "CRISPR Screen RRA Analysis",
    "section": "Compute enrichment or depletion",
    "text": "Compute enrichment or depletion\nResult shown in the next section.\n\n\nCode\n# enrichment of guides in td- vs. iN (S8 VS. S6)\ndtS86 = makeDT(dt = cnts[, .(ID, Gene, denom = S6, num = S8)],\n               dt.norm = cnts.norm[, .(ID, Gene, denom = S6, num = S8)])\nrraS86 = RRA(dtS86, enrichment = T)\n\n\n\n\nCode\n# enrichment of guides in td- vs. td+ (S8 VS. S7)\ndtS87 = makeDT(dt = cnts[, .(ID, Gene, denom = S7, num = S8)],\n               dt.norm = cnts.norm[, .(ID, Gene, denom = S7, num = S8)])\nrraS87 = RRA(dtS87, enrichment = T)\n\n\n\n\nCode\n# depletion of guides in td+ vs. iN (S7 VS. S6)\ndtS76 = makeDT(dt = cnts[, .(ID, Gene, denom = S6, num = S7)],\n               dt.norm = cnts.norm[, .(ID, Gene, denom = S6, num = S7)])\nrraS76 = RRA(dtS76, enrichment = F)"
  },
  {
    "objectID": "analysis/crispr_rra.html#monte-carlo-simulation",
    "href": "analysis/crispr_rra.html#monte-carlo-simulation",
    "title": "CRISPR Screen RRA Analysis",
    "section": "Monte Carlo simulation",
    "text": "Monte Carlo simulation\nSimulations are set to run 20 iterations.\n\n\nCode\nN_sim = 20 # number of simulations\n\nsim.rraS86.l = list()\nfor (i in 1:N_sim) {\n    sim.cnts = cnts[\n        , .(Gene, ID,\n           S6 = S6[sample(length(S6))],\n           S7 = S7[sample(length(S7))],\n           S8 = S8[sample(length(S8))])]\n    \n    selcols = c(\"S6\", \"S7\", \"S8\")\n    # log2 RPM normalize counts\n    sim.cnts.norm = sim.cnts[, c(list(ID = ID, Gene = Gene),\n        lapply(.SD, function(x) log2(if_else(x==0, .1, .1*x)*1e6/sum(x)) )), \n        .SDcols = selcols]\n               \n    sim.dtS86 = makeDT(dt = sim.cnts[, .(ID, Gene, denom = S6, num = S8)],\n               dt.norm = sim.cnts.norm[, .(ID, Gene, denom = S6, num = S8)])\n    sim.rraS86 = list(RRA(sim.dtS86, enrichment = T))\n    sim.rraS86.l = c(sim.rraS86.l, sim.rraS86)\n}\n\n# get ecdf\necdf.S86 = ecdf(map(sim.rraS86.l, ~.x$rankscore) %>% flatten %>% unlist)\n\n# use ecdf to compute FDR value\nrraS86[, FDR := ecdf.S86(rankscore)]\n\n\n\n\nCode\nN_sim = 20 # number of simulations\n\nsim.rraS87.l = list()\nfor (i in 1:N_sim) {\n    sim.cnts = cnts[\n        , .(Gene, ID,\n           S6 = S6[sample(length(S6))],\n           S7 = S7[sample(length(S7))],\n           S8 = S8[sample(length(S8))])]\n    \n    selcols = c(\"S6\", \"S7\", \"S8\")\n    # log2 RPM normalize counts\n    sim.cnts.norm = sim.cnts[, c(list(ID = ID, Gene = Gene),\n        lapply(.SD, function(x) log2(if_else(x==0, .1, .1*x)*1e6/sum(x)) )), \n        .SDcols = selcols]\n               \n    sim.dtS87 = makeDT(dt = sim.cnts[, .(ID, Gene, denom = S7, num = S8)],\n               dt.norm = sim.cnts.norm[, .(ID, Gene, denom = S7, num = S8)])\n    sim.rraS87 = list(RRA(sim.dtS87, enrichment = T))\n    sim.rraS87.l = c(sim.rraS87.l, sim.rraS87)\n}\n\n# get ecdf\necdf.S87 = ecdf(map(sim.rraS87.l, ~.x$rankscore) %>% flatten %>% unlist)\n\n# use ecdf to compute FDR value\nrraS87[, FDR := ecdf.S87(rankscore)]\n\n\n\n\nCode\nN_sim = 20 # number of simulations\n\nsim.rraS76.l = list()\nfor (i in 1:N_sim) {\n    sim.cnts = cnts[\n        , .(Gene, ID,\n           S6 = S6[sample(length(S6))],\n           S7 = S7[sample(length(S7))],\n           S8 = S8[sample(length(S8))])]\n    \n    selcols = c(\"S6\", \"S7\", \"S8\")\n    # log2 RPM normalize counts\n    sim.cnts.norm = sim.cnts[, c(list(ID = ID, Gene = Gene),\n        lapply(.SD, function(x) log2(if_else(x==0, .1, .1*x)*1e6/sum(x)) )), \n        .SDcols = selcols]\n               \n    sim.dtS76 = makeDT(dt = sim.cnts[, .(ID, Gene, denom = S6, num = S7)],\n               dt.norm = sim.cnts.norm[, .(ID, Gene, denom = S6, num = S7)])\n    sim.rraS76 = list(RRA(sim.dtS76, enrichment = F))\n    sim.rraS76.l = c(sim.rraS76.l, sim.rraS76)\n}\n\n# get ecdf\necdf.S76 = ecdf(map(sim.rraS76.l, ~.x$rankscore) %>% flatten %>% unlist)\n\n# use ecdf to compute FDR value\nrraS76[, FDR := ecdf.S76(rankscore)]\n\n\n\nEnrichment of Td- vs. iN at Day14, with MC computed FDR, genes with FDR < 0.15 are shown\n\n\nCode\nrraS86[!is.na(rankscore) & FDR < .15] %>% DT::datatable() %>% DT::formatRound(\"FDR\", digits = 5)\n\n\n\n\n\n\n\n\n\nEnrichment of Td- vs. Td+ at Day14, with MC computed FDR\n\n\nCode\nrraS87[!is.na(rankscore) & FDR < .15] %>% DT::datatable() %>% DT::formatRound(\"FDR\", digits = 5)\n\n\n\n\n\n\n\n\n\nDepletion of Td+ vs. iN at Day14, with MC computed FDR\n\n\nCode\nrraS76[FDR < .15] %>% DT::datatable() %>% DT::formatRound(\"FDR\", digits = 5)"
  },
  {
    "objectID": "analysis/crispr_rra.html#compare-with-hits-found-from-existing-method-using-fdr-.15",
    "href": "analysis/crispr_rra.html#compare-with-hits-found-from-existing-method-using-fdr-.15",
    "title": "CRISPR Screen RRA Analysis",
    "section": "Compare with hits found from existing method, using FDR< .15",
    "text": "Compare with hits found from existing method, using FDR< .15\n\n\nCode\nhitlist = fread(\"../code/resources/crispr/Hitlist_20191230.csv\")\n\n\nPrevious method found 122 genes, shown below:\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"venn.svg\")\n\n\n\n\n\nNotice a large number of overlaps. When we combine hits found from Td- vs. iN and Td- vs. Td+ with FDR < 0.15 (which is the same way we selected our 120 hits. There are 23 (NEUROG1 and NEUROG2 are not considered) hits found in existing method, but not found in the RRA method. Nearly all the hits that we initially removed in our existing method, which are labeled as hit with the RRA method are non-targeting controls. This highlights the advantage of our existing manual method of more precise control of false positives and potential false negatives. Of course, the disadvantage is that the existing manual method does not produce a p-value thus is less informative in statistical confidence.\nBelow shows hits that are found in both this method and our existing method. Notice many of these TFs are repeatedly identified as differentially expressed as well as later identified as nodes in the putative neuronal development gene regulatory network.\n\n\nCode\nintersect(union(set87, set86), hitlist$gene_name) %>% length\n\n\n[1] 96\n\n\nCode\nintersect(union(set87, set86), hitlist$gene_name)\n\n\n [1] \"ZNF441\"    \"ZNF440\"    \"CRY1\"      \"E2F1\"      \"CDX4\"      \"BHLHA15\"  \n [7] \"ZNF311\"    \"EGR3\"      \"ZIC1\"      \"NR1I2\"     \"ZNF250\"    \"ZNF639\"   \n[13] \"PRDM6\"     \"DLX5\"      \"TOX4\"      \"THRA\"      \"BRWD1\"     \"CHD5\"     \n[19] \"CBX4\"      \"VAX2\"      \"ZBTB18\"    \"RAI14\"     \"RBPJ\"      \"TSHZ3\"    \n[25] \"NKX3-2\"    \"TAF1L\"     \"APBB2\"     \"SCRT2\"     \"HSFY1\"     \"ZNF136\"   \n[31] \"EMX1\"      \"UBE2K\"     \"CTDP1\"     \"JUNB\"      \"MECP2\"     \"POLR2B\"   \n[37] \"ZZZ3\"      \"ZNF554\"    \"KLF10\"     \"INSM1\"     \"MEOX2\"     \"ZNF671\"   \n[43] \"SMAD3\"     \"EBF1\"      \"ZNF563\"    \"PAX7\"      \"ZNF141\"    \"ZFPM1\"    \n[49] \"HIST1H2BC\" \"JUND\"      \"HTATIP2\"   \"PRDM5\"     \"GATA1\"     \"TFEB\"     \n[55] \"CREBZF\"    \"VGLL2\"     \"SKI\"       \"ZFY\"       \"HIF3A\"     \"ELK3\"     \n[61] \"ZIM3\"      \"ARID1B\"    \"AHR\"       \"NFAT5\"     \"NEUROG3\"   \"TSC22D3\"  \n[67] \"LHX4\"      \"ZNF239\"    \"SIX5\"      \"ZNF510\"    \"PAX2\"      \"ZNF92\"    \n[73] \"CTNNB1\"    \"TAF5\"      \"NFKBIB\"    \"ZKSCAN3\"   \"AFF4\"      \"ARNTL\"    \n[79] \"TCEA2\"     \"PHF12\"     \"MPHOSPH8\"  \"ZNF34\"     \"RORB\"      \"HOXB3\"    \n[85] \"ISL2\"      \"ZNF502\"    \"FOXQ1\"     \"HOXC13\"    \"POU2F3\"    \"POLR2J\"   \n[91] \"TBPL1\"     \"AIP\"       \"ZNF282\"    \"CNOT6\"     \"ZNF547\"    \"RCOR2\"    \n\n\nBelow are hits that are found in our existing method but missed in this method.\n\n\nCode\nsetdiff(hitlist$gene_name, union(set87, set86))\n\n\n [1] \"PHOX2A\"   \"SNAI2\"    \"ZBTB43\"   \"ZNF200\"   \"MLLT6\"    \"ZNF3\"    \n [7] \"ZNF324\"   \"ASB1\"     \"GTF2A2\"   \"JADE3\"    \"ZNF573\"   \"NBPF24\"  \n[13] \"SOX15\"    \"FOXN2\"    \"CEBPA\"    \"NKRF\"     \"NR1D2\"    \"EHF\"     \n[19] \"POU3F2\"   \"KLF14\"    \"SLA2\"     \"ZFP2\"     \"ZNF107\"   \"NEUROG1\" \n[25] \"NEUROG2\"  \"HIST1H1E\"\n\n\nBelow are labeled hits in this method but rejected in our existing method. Notice many are in fact non-targeting controls, suggesting our existing method may be better suited in removing false positives.\n\n\nCode\nsetdiff(union(set87, set86), hitlist$gene_name)\n\n\n [1] \"NonTargeting_Human_22\" \"NonTargeting_Human_90\" \"NonTargeting_Human_13\"\n [4] \"NonTargeting_Human_31\" \"NonTargeting_Human_57\" \"NonTargeting_Human_88\"\n [7] \"NonTargeting_Human_69\" \"NonTargeting_Human_39\" \"NonTargeting_Human_99\"\n[10] \"ATF6B\"                 \"NonTargeting_Human_67\" \"ZNF766\"               \n[13] \"NonTargeting_Human_64\""
  },
  {
    "objectID": "analysis/atac_QC_comments.html",
    "href": "analysis/atac_QC_comments.html",
    "title": "Respond to ATAC-seq QC comments",
    "section": "",
    "text": "Reproducibility\nSample 11 and 12 are day 5, which is drastcally different comparing to other samples. As a result, we notice that sample 11 and 12 are clearly separated from other samples. However, other timepoints may be too close to tell apart when look at all genome wide or the entire set of protein coding genes.\n\nGenome wideGenebodyPromoter\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/BigwigSummary/Genome/heatmap.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/BigwigSummary/GeneBody/heatmap.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/BigwigSummary/Promoter/heatmap.pdf\")\n\n\n\n\n\n\n\n\n\n\nFragment size\nIn some samples, there is evidence that some samples may be over transposed to a certain extent. However, as demonstrated by the data below, overall size selection bias is kept low across samples. Overall trend indeed shows the highest amount fragment size represent nucleosome free region, and followed mono-nucleosome and di- and tri-nucleosome fragments.\n\nATAC1ATAC2ATAC3ATAC4ATAC5ATAC6ATAC7ATAC8ATAC9ATAC10ATAC11ATAC12\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC1.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC2.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC3.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC4.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC5.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC6.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC7.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC8.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC9.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC10.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC11.pdf\")\n\n\n\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/fragSizeDist/ATAC12.pdf\")\n\n\n\n\n\n\n\n\n\n\nEnrichment\nWe investigated the enrichment of ATAC-seq signals at the promoter region of highly expressed genes with correpsonding time points. We selected a set of 5000 medium to highly expressed genes and plotted ATAC-seq signal strength at the 2kb up and down stream of TSS. The figures below demonstrate the trend that chromatin accessibility is enriched in the promoter regino of these genes, and that we can observe an overall increasing trend of chromatin accessibility as cells further commit to the neuronal developmental path. This increasing trend correlates with our observation in the RNA-seq dataset where significantly more genes are expressed as cells commit towards the neuronal path.\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/deeptoolsplots/heatmap_tss_u1k_d1k_top5k_genes.pdf\")\n\n\n\n\n\n\n\nPercent of Reads in Peaks\nWe compared the percent of ATAC-seq reads allocated in peaks. The results show similar observation as we did in the enrichment analysis. As cells are further differentiated towards neurons, more regions of the genome, including protein coding genes / transcription factors, become more accessible. This is reflected in increasing enrichment in the promoter region as we discussed previously, as well as higher percentage of reads in the called peaks regions. Notably, the last two samples, two biological replicates of the final time point, have significantly more reads allocated in the peak regions.\n\n\nCode\nknitr::include_graphics(\"../code/results/reviews/atac/PRiP.pdf\")"
  },
  {
    "objectID": "analysis/crispr_rra.html#compare-with-other-papers",
    "href": "analysis/crispr_rra.html#compare-with-other-papers",
    "title": "CRISPR Screen RRA Analysis",
    "section": "Compare with other papers",
    "text": "Compare with other papers\n\nTake Tian et. al Neuron 2019 screen data\nHits are selected from their day 14 Neuron hits with pvalue < 0.01. Since most genes dropped out, only found 3 overlapping genes, of which CTDP1 pass 15% FDR.\n\n\nCode\ntian_day14 = readxl::read_excel(\"../data/tian_neuron2019/mmc2.xlsx\", sheet = \"Day 14 neuron\")\ntian_day14_hits = filter(tian_day14, Pvalue < 0.01) %>% pull(`Gene symbol`)\nrraS86[Gene %in% tian_day14_hits]\n\n\n     Gene rankscore        FDR\n1:  CTDP1     237.0 0.05338542\n2:   RXRB     602.0 0.28071385\n3: TRIM33    1156.5 0.79266238\n\n\nAre our hits in their data?\nOnly 5 of our hits were in their data, of which, 1 significant with 0.001 as cutoff.\n\n\nCode\ntian_day14 %>% filter(`Gene symbol` %in% hitlist$gene_name) %>% \n  arrange(Pvalue)\n\n\n# A tibble: 5 × 5\n  Target `Gene symbol` `Knockdown phenotype`  Pvalue Product\n  <chr>  <chr>                         <dbl>   <dbl>   <dbl>\n1 CTDP1  CTDP1                       -0.497  0.00308 -1.25  \n2 ZFY    ZFY                          0.0968 0.119    0.0894\n3 NR1I2  NR1I2                        0.346  0.125    0.313 \n4 THRA   THRA                        -0.182  0.265   -0.105 \n5 TAF1L  TAF1L                        0.0678 0.406    0.0265"
  },
  {
    "objectID": "analysis/crispr_rra.html#liu-et-al.-cell-stem-cell-2018-screen-data",
    "href": "analysis/crispr_rra.html#liu-et-al.-cell-stem-cell-2018-screen-data",
    "title": "CRISPR Screen RRA Analysis",
    "section": "Liu et al., Cell Stem Cell 2018 screen data",
    "text": "Liu et al., Cell Stem Cell 2018 screen data\nOnly raw data available, analysis TBD."
  },
  {
    "objectID": "analysis/crispr_rra.html#black-et-al.-cell-reports-2020-screend-ata",
    "href": "analysis/crispr_rra.html#black-et-al.-cell-reports-2020-screend-ata",
    "title": "CRISPR Screen RRA Analysis",
    "section": "Black et al. Cell Reports 2020 screend ata",
    "text": "Black et al. Cell Reports 2020 screend ata\nCounts data and screen results with p-value availabl, analyses TBD."
  },
  {
    "objectID": "analysis/compare_interaction_files.html",
    "href": "analysis/compare_interaction_files.html",
    "title": "Compare interaction output files",
    "section": "",
    "text": "Compare interaction files computed from before (2020) and recomputed now with essentially same code. The purpose is to make sure the results are consistent."
  },
  {
    "objectID": "analysis/compare_interaction_files.html#compare-interactions-genebody-from-current-run-with-run-in-2020",
    "href": "analysis/compare_interaction_files.html#compare-interactions-genebody-from-current-run-with-run-in-2020",
    "title": "Compare interaction output files",
    "section": "Compare interactions (genebody) from current run with run in 2020",
    "text": "Compare interactions (genebody) from current run with run in 2020\n\n\nCode\ninter.mx.old = \"../code/resources/TFscreen/Interaction_matrix_nofilter_AllTF_20200107.csv\"\ninter.mx.old = fread(inter.mx.old)\n\ninter.mx.new = \"../code/results/reviews/interactions/Interaction_matrix_nofilter_AllTF_genebody_20230111.csv\"\ninter.mx.new = fread(inter.mx.new)\n\n\ndifferences in total interaction pairs?\n\n\nCode\ninteractions = map(\n  list(old = inter.mx.old, new = inter.mx.new),\n  ~ .x[, .(interaction = paste(regulator_gene, target_gene, sep=\"_\"))] %>% \n    .[, interaction] %>% unique\n)\n\nmap_int(interactions, length)\n\n\n   old    new \n217560 214684 \n\n\nIntersections of the two is exactly the same number as the length of new interactions. Thus new is a subset of old.\n\n\nCode\nreduce(interactions, intersect) %>% length\n\n\n[1] 214684\n\n\nCode\nsetdiff(interactions$new, reduce(interactions, intersect)) %>% length\n\n\n[1] 0\n\n\nWhat interactions in the old not found in new? Only about 26 targets comprise genes missed out in the new run.\n\n\nCode\nprint(\"Regulators of interactions not found in new:\")\n\n\n[1] \"Regulators of interactions not found in new:\"\n\n\nCode\nsetdiff(interactions$old, interactions$new) %>%\n  str_split(\"_\", simplify = T) %>% \n  as.data.table %>% \n  pull(V1) %>% unique %>% length\n\n\n[1] 451\n\n\nCode\nprint(\"Targets of interactions not found in new:\")\n\n\n[1] \"Targets of interactions not found in new:\"\n\n\nCode\nsetdiff(interactions$old, interactions$new) %>%\n  str_split(\"_\", simplify = T) %>% \n  as.data.table %>% \n  pull(V2) %>% unique\n\n\n [1] \"CAVIN1\" \"ELOA\"   \"FCMR\"   \"H1-3\"   \"H2BC15\" \"H2BC9\"  \"MRTFB\"  \"NOCT\"  \n [9] \"SLF1\"   \"NSD3\"   \"MRTFA\"  \"NSD2\"   \"CRAMP1\" \"H1-5\"   \"H2BC21\" \"H1-4\"  \n[17] \"H2BC5\"  \"ELOC\"   \"H2BC4\"  \"TLE5\"   \"NSMCE3\" \"ZNF875\" \"H1-2\"   \"H2BC11\"\n[25] \"ELOB\"   \"H1-10\"  \"H1-0\"  \n\n\nAre the numbers about the same in the new run?\nRandomly pick 7 values, show that the difference is almost always 0. Plot shows that the two runs are mostly exactly the same.\n\n\nCode\ninter.mx.old[, interaction := paste(regulator_gene, target_gene, sep=\"_\")]\ninter.mx.new[, interaction := paste(regulator_gene, target_gene, sep=\"_\")]\n\n# common sets\ninter.mx = list(\n  old = inter.mx.old[interaction %in% reduce(interactions, intersect)][\n    order(interaction)],\n  new = inter.mx.new[interaction %in% reduce(interactions, intersect)][\n    order(interaction)]\n)\n\n\n\n\nCode\n# check atac.D4\nif (all(inter.mx$old$interaction == inter.mx$new$interaction)) {\n  comps = list(\n  atac.D4.diff = round(inter.mx$old$atac.D4 - inter.mx$new$atac.D4),\n  atac.cnt.D1.diff = round(inter.mx$old$atac.cnt.D1 - inter.mx$new$atac.cnt.D1),\n  tar.cnt.ES.diff = round(inter.mx$old$tar.ge.ES - inter.mx$new$tar.ge.ES),\n  tar.ge.H16.diff = round(inter.mx$old$tar.ge.H16 - inter.mx$new$tar.ge.H16),\n  reg.fdr.D4 = round(inter.mx$old$reg.fdr.D4 - inter.mx$new$reg.fdr.D4, digits = 2),\n  tar.l2fc.D1 = round(inter.mx$old$l2fc.D1 - inter.mx$new$tar.l2fc.D1, digits = 2),\n  corr = round(inter.mx$old$corr - inter.mx$new$corr, digits = 2)\n  ) %>% as.data.table\n}\n\nmelt(comps, variable.name = \"type\", value.name = \"diff\") %>%\n  ggplot() + stat_ecdf(aes(diff, color = type))\n\n\nWarning in melt.data.table(comps, variable.name = \"type\", value.name = \"diff\"):\nid.vars and measure.vars are internally guessed when both are 'NULL'. All non-\nnumeric/integer/logical type columns are considered id.vars, which in this case\nare columns []. Consider providing at least one of 'id' or 'measure' vars in\nfuture.\n\n\nWarning: Removed 27523 rows containing non-finite values (stat_ecdf)."
  }
]